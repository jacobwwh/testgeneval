{
    "pytest_cmdline_main": {
        "func_name": "pytest_cmdline_main",
        "class": "",
        "executed_lines": [
            125,
            126,
            127,
            128
        ],
        "missing_lines": [
            129,
            130
        ],
        "all_lines": [
            125,
            126,
            127,
            128,
            129,
            130
        ]
    },
    "pytest_generate_tests": {
        "func_name": "pytest_generate_tests",
        "class": "",
        "executed_lines": [
            136,
            137,
            138,
            141,
            142
        ],
        "missing_lines": [
            139,
            140
        ],
        "all_lines": [
            136,
            137,
            138,
            139,
            140,
            141,
            142
        ]
    },
    "pytest_pyfunc_call": {
        "func_name": "pytest_pyfunc_call",
        "class": "",
        "executed_lines": [
            167,
            168,
            169,
            177,
            178,
            179,
            180
        ],
        "missing_lines": [
            170,
            171,
            172,
            173,
            174,
            175,
            176
        ],
        "all_lines": [
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180
        ]
    },
    "pytest_pycollect_makeitem": {
        "func_name": "pytest_pycollect_makeitem",
        "class": "",
        "executed_lines": [
            208,
            209,
            210,
            213,
            214,
            215,
            216,
            218,
            222,
            232,
            233,
            239,
            240
        ],
        "missing_lines": [
            211,
            223,
            224,
            234,
            235,
            236,
            237
        ],
        "all_lines": [
            208,
            209,
            210,
            211,
            213,
            214,
            215,
            216,
            218,
            222,
            223,
            224,
            232,
            233,
            234,
            235,
            236,
            237,
            239,
            240
        ]
    },
    "PyobjMixin.getmodpath": {
        "func_name": "getmodpath",
        "class": "PyobjMixin",
        "executed_lines": [
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            293,
            294,
            295,
            296,
            297
        ],
        "missing_lines": [
            292
        ],
        "all_lines": [
            281,
            282,
            283,
            284,
            285,
            286,
            287,
            288,
            289,
            290,
            291,
            292,
            293,
            294,
            295,
            296,
            297
        ]
    },
    "PyobjMixin.reportinfo": {
        "func_name": "reportinfo",
        "class": "PyobjMixin",
        "executed_lines": [
            301,
            302,
            303,
            310,
            311,
            312,
            313
        ],
        "missing_lines": [
            305,
            306,
            307,
            308
        ],
        "all_lines": [
            301,
            302,
            303,
            305,
            306,
            307,
            308,
            310,
            311,
            312,
            313
        ]
    },
    "PyCollector.istestfunction": {
        "func_name": "istestfunction",
        "class": "PyCollector",
        "executed_lines": [
            333,
            334,
            337,
            342
        ],
        "missing_lines": [
            336
        ],
        "all_lines": [
            333,
            334,
            336,
            337,
            342
        ]
    },
    "PyCollector._matches_prefix_or_glob_option": {
        "func_name": "_matches_prefix_or_glob_option",
        "class": "PyCollector",
        "executed_lines": [
            352,
            353,
            354,
            358,
            362
        ],
        "missing_lines": [
            361
        ],
        "all_lines": [
            352,
            353,
            354,
            358,
            361,
            362
        ]
    },
    "PyCollector.collect": {
        "func_name": "collect",
        "class": "PyCollector",
        "executed_lines": [
            365,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387
        ],
        "missing_lines": [
            366
        ],
        "all_lines": [
            365,
            366,
            370,
            371,
            372,
            373,
            374,
            375,
            376,
            377,
            378,
            379,
            380,
            381,
            382,
            383,
            384,
            385,
            386,
            387
        ]
    },
    "PyCollector._genfunctions": {
        "func_name": "_genfunctions",
        "class": "PyCollector",
        "executed_lines": [
            394,
            395,
            396,
            397,
            399,
            400,
            402,
            405,
            406,
            407,
            408,
            410,
            411,
            415,
            417,
            418,
            421,
            426,
            428,
            429,
            430
        ],
        "missing_lines": [
            409
        ],
        "all_lines": [
            394,
            395,
            396,
            397,
            399,
            400,
            402,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            415,
            417,
            418,
            421,
            426,
            428,
            429,
            430
        ]
    },
    "Module._inject_setup_function_fixture": {
        "func_name": "_inject_setup_function_fixture",
        "class": "Module",
        "executed_lines": [
            488,
            489,
            490,
            491
        ],
        "missing_lines": [
            493,
            494,
            506
        ],
        "all_lines": [
            488,
            489,
            490,
            491,
            493,
            494,
            506
        ]
    },
    "Module._importtestmodule": {
        "func_name": "_importtestmodule",
        "class": "Module",
        "executed_lines": [
            510,
            511,
            512,
            513,
            517,
            528,
            546,
            555,
            556
        ],
        "missing_lines": [
            514,
            518,
            519,
            529,
            531,
            532,
            533,
            534,
            539,
            540,
            547,
            548,
            549
        ],
        "all_lines": [
            510,
            511,
            512,
            513,
            514,
            517,
            518,
            519,
            528,
            529,
            531,
            532,
            533,
            534,
            539,
            540,
            546,
            547,
            548,
            549,
            555,
            556
        ]
    },
    "Package._recurse": {
        "func_name": "_recurse",
        "class": "Package",
        "executed_lines": [
            587,
            588,
            589,
            590,
            592,
            593,
            595,
            596,
            597
        ],
        "missing_lines": [
            591,
            594
        ],
        "all_lines": [
            587,
            588,
            589,
            590,
            591,
            592,
            593,
            594,
            595,
            596,
            597
        ]
    },
    "Package._collectfile": {
        "func_name": "_collectfile",
        "class": "Package",
        "executed_lines": [
            614,
            620,
            621,
            622,
            625,
            626,
            627,
            628,
            629,
            630,
            632,
            634,
            637
        ],
        "missing_lines": [
            623,
            635
        ],
        "all_lines": [
            614,
            620,
            621,
            622,
            623,
            625,
            626,
            627,
            628,
            629,
            630,
            632,
            634,
            635,
            637
        ]
    },
    "Package.collect": {
        "func_name": "collect",
        "class": "Package",
        "executed_lines": [
            643,
            644,
            645,
            649,
            650,
            652,
            653,
            654,
            655,
            657,
            658,
            662,
            664,
            665,
            666,
            667,
            670,
            671
        ],
        "missing_lines": [
            648,
            669
        ],
        "all_lines": [
            643,
            644,
            645,
            648,
            649,
            650,
            652,
            653,
            654,
            655,
            657,
            658,
            662,
            664,
            665,
            666,
            667,
            669,
            670,
            671
        ]
    },
    "Class.collect": {
        "func_name": "collect",
        "class": "Class",
        "executed_lines": [
            721,
            723,
            731,
            740,
            741,
            743
        ],
        "missing_lines": [
            722,
            724,
            730,
            732,
            738
        ],
        "all_lines": [
            721,
            722,
            723,
            724,
            730,
            731,
            732,
            738,
            740,
            741,
            743
        ]
    },
    "Class._inject_setup_class_fixture": {
        "func_name": "_inject_setup_class_fixture",
        "class": "Class",
        "executed_lines": [
            752,
            753,
            754,
            755
        ],
        "missing_lines": [
            757,
            758,
            767
        ],
        "all_lines": [
            752,
            753,
            754,
            755,
            757,
            758,
            767
        ]
    },
    "FunctionMixin._prunetraceback": {
        "func_name": "_prunetraceback",
        "class": "FunctionMixin",
        "executed_lines": [
            824,
            825,
            826,
            827,
            828,
            829,
            830,
            831,
            832,
            833,
            836,
            839,
            840
        ],
        "missing_lines": [
            834,
            841,
            842
        ],
        "all_lines": [
            824,
            825,
            826,
            827,
            828,
            829,
            830,
            831,
            832,
            833,
            834,
            836,
            839,
            840,
            841,
            842
        ]
    },
    "CallSpec2._checkargnotcontained": {
        "func_name": "_checkargnotcontained",
        "class": "CallSpec2",
        "executed_lines": [
            889
        ],
        "missing_lines": [
            890
        ],
        "all_lines": [
            889,
            890
        ]
    },
    "CallSpec2.getparam": {
        "func_name": "getparam",
        "class": "CallSpec2",
        "executed_lines": [
            893,
            894,
            895,
            896,
            897
        ],
        "missing_lines": [
            898
        ],
        "all_lines": [
            893,
            894,
            895,
            896,
            897,
            898
        ]
    },
    "Metafunc._resolve_arg_ids": {
        "func_name": "_resolve_arg_ids",
        "class": "Metafunc",
        "executed_lines": [
            1054,
            1056,
            1057,
            1060,
            1061,
            1062,
            1065,
            1066,
            1072,
            1073
        ],
        "missing_lines": [
            1058,
            1059,
            1063,
            1064,
            1067,
            1068
        ],
        "all_lines": [
            1054,
            1056,
            1057,
            1058,
            1059,
            1060,
            1061,
            1062,
            1063,
            1064,
            1065,
            1066,
            1067,
            1068,
            1072,
            1073
        ]
    },
    "Metafunc._resolve_arg_value_types": {
        "func_name": "_resolve_arg_value_types",
        "class": "Metafunc",
        "executed_lines": [
            1086,
            1087,
            1088,
            1089,
            1090,
            1102
        ],
        "missing_lines": [
            1091,
            1092,
            1093,
            1094,
            1095,
            1101
        ],
        "all_lines": [
            1086,
            1087,
            1088,
            1089,
            1090,
            1091,
            1092,
            1093,
            1094,
            1095,
            1101,
            1102
        ]
    },
    "Metafunc._validate_if_using_arg_names": {
        "func_name": "_validate_if_using_arg_names",
        "class": "Metafunc",
        "executed_lines": [
            1112,
            1113,
            1114,
            1115
        ],
        "missing_lines": [
            1116,
            1117,
            1124,
            1125,
            1127,
            1128
        ],
        "all_lines": [
            1112,
            1113,
            1114,
            1115,
            1116,
            1117,
            1124,
            1125,
            1127,
            1128
        ]
    },
    "_find_parametrized_scope": {
        "func_name": "_find_parametrized_scope",
        "class": "",
        "executed_lines": [
            1144,
            1146,
            1149,
            1151,
            1164
        ],
        "missing_lines": [
            1147,
            1152,
            1153,
            1158,
            1160,
            1161,
            1162
        ],
        "all_lines": [
            1144,
            1146,
            1147,
            1149,
            1151,
            1152,
            1153,
            1158,
            1160,
            1161,
            1162,
            1164
        ]
    },
    "_ascii_escaped_by_config": {
        "func_name": "_ascii_escaped_by_config",
        "class": "",
        "executed_lines": [
            1168,
            1171,
            1174
        ],
        "missing_lines": [
            1169
        ],
        "all_lines": [
            1168,
            1169,
            1171,
            1174
        ]
    },
    "_idval": {
        "func_name": "_idval",
        "class": "",
        "executed_lines": [
            1178,
            1190,
            1191,
            1194,
            1197,
            1198,
            1199,
            1200
        ],
        "missing_lines": [
            1179,
            1180,
            1181,
            1182,
            1183,
            1185,
            1186,
            1188,
            1189,
            1195,
            1201,
            1202,
            1203,
            1204,
            1205,
            1206,
            1207
        ],
        "all_lines": [
            1178,
            1179,
            1180,
            1181,
            1182,
            1183,
            1185,
            1186,
            1188,
            1189,
            1190,
            1191,
            1194,
            1195,
            1197,
            1198,
            1199,
            1200,
            1201,
            1202,
            1203,
            1204,
            1205,
            1206,
            1207
        ]
    },
    "_idvalset": {
        "func_name": "_idvalset",
        "class": "",
        "executed_lines": [
            1211,
            1213,
            1214,
            1218,
            1220
        ],
        "missing_lines": [
            1212
        ],
        "all_lines": [
            1211,
            1212,
            1213,
            1214,
            1218,
            1220
        ]
    },
    "idmaker": {
        "func_name": "idmaker",
        "class": "",
        "executed_lines": [
            1224,
            1228,
            1236
        ],
        "missing_lines": [
            1230,
            1231,
            1232,
            1233,
            1234,
            1235
        ],
        "all_lines": [
            1224,
            1228,
            1230,
            1231,
            1232,
            1233,
            1234,
            1235,
            1236
        ]
    },
    "_showfixtures_main": {
        "func_name": "_showfixtures_main",
        "class": "",
        "executed_lines": [
            1304,
            1306,
            1307,
            1308,
            1309,
            1311,
            1313,
            1314,
            1316,
            1317,
            1318,
            1320,
            1321,
            1322,
            1324,
            1325,
            1335,
            1336,
            1337,
            1338,
            1339,
            1340,
            1341,
            1342,
            1343,
            1344,
            1345,
            1346,
            1347,
            1348,
            1349,
            1350,
            1351,
            1352,
            1353,
            1354,
            1356,
            1357
        ],
        "missing_lines": [
            1319,
            1323
        ],
        "all_lines": [
            1304,
            1306,
            1307,
            1308,
            1309,
            1311,
            1313,
            1314,
            1316,
            1317,
            1318,
            1319,
            1320,
            1321,
            1322,
            1323,
            1324,
            1325,
            1335,
            1336,
            1337,
            1338,
            1339,
            1340,
            1341,
            1342,
            1343,
            1344,
            1345,
            1346,
            1347,
            1348,
            1349,
            1350,
            1351,
            1352,
            1353,
            1354,
            1356,
            1357
        ]
    },
    "Function.__init__": {
        "func_name": "__init__",
        "class": "Function",
        "executed_lines": [
            1396,
            1397,
            1398,
            1399,
            1401,
            1402,
            1403,
            1404,
            1408,
            1412,
            1413,
            1414,
            1419,
            1430,
            1431,
            1434,
            1435,
            1436,
            1442
        ],
        "missing_lines": [
            1411
        ],
        "all_lines": [
            1396,
            1397,
            1398,
            1399,
            1401,
            1402,
            1403,
            1404,
            1408,
            1411,
            1412,
            1413,
            1414,
            1419,
            1430,
            1431,
            1434,
            1435,
            1436,
            1442
        ]
    }
}